module acc/AN2-to-C-Functions

imports obs/AN2 c/C obs/aux/structs/Environment

exports

sorts Statements ExternalDefinitions

context-free syntax

fa-to-decls(Action,Environment) -> ExternalDefinitions
fa-to-identifier(Action, Environment) -> ID
fa-to-expression(Action,Expression,Expression,Environment) -> Expression
fa-to-default-expression(Action,Environment) -> Expression
fa-to-function(Action, FunctionBody, Environment) -> FunctionDefinition
bindings-parameter() -> ID
data-parameter() -> ID
bindings-type() -> ID
data-type() -> ID

make-id(Action, Int) -> ID

aliases
(Declaration* Statement*) -> FunctionBody
Statement* -> Statements
Declaration* -> Declarations
ExternalDefinition* -> ExternalDefinitions
PrimaryExpression -> Expression

hiddens
variables
"env"[0-9\']* -> Environment
"str"[0-9\']* -> STRINGliteral
"defs"[0-9\']* -> ExternalDefinitions
"exp"[0-9\']* -> PrimaryExpression
"stat"[0-9\']* -> Statement
"stats"[0-9\']* -> Statements
"id"[0-9\']* -> ID
"n"[0-9\']* -> Int
"char+"[0-9\']* -> CHAR+
"ao"[0-9\']* -> ActionOutcome
"t"[0-9\']* -> Type
"T"[0-9\']* -> Terminated
"ds"[0-9\']* -> DataSort
"oc"[0-9\']* -> Outcome+
"A"[0-9\']* -> Action
"Ap"[0-9\']* -> ActionPrefix
"Ac"[0-9\']* -> ActionConst
"Ai"[0-9\']* -> ActionInfix
"C"[0-9\']* -> {Action "or"}+
"d"[0-9]* -> Data
"d+"[0-9]* -> {Data ","}+
"o"[0-9\']* -> DataOp
"oi"[0-9\']* -> DataOpInfix
"op"[0-9\']* -> DataOpPrefix
"q"[0-9\']* -> DataPred
"u"[0-9\']* -> Datum
"tk"[0-9\']* -> Token
"nat"[0-9\']* -> Nat
"pos"[0-9\']* -> Pos
"nat-con"[0-9\']* -> Nat-Con
"b"[0-9\']* -> DataConst
"bs"[0-9\']* -> Bindings

