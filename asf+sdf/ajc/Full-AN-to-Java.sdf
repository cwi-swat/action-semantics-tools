module ajc/Full-AN-to-Java

imports ajc/Kernel-AN-to-Java
	obs/aux/structs/Info[Unf-Index Unf-Reference]
	obs/aux/structs/Info[Rec-Index Rec-Reference]
	ai/Action-Analysis

exports

context-free syntax

"unf" -> Unf-Index
"rec" -> Rec-Index

Action # Int # Bool -> Unf-Reference
Action # Int -> Rec-Reference

hiddens
variables
"id"[0-9\']* -> Id
"str"[0-9\']* -> StringLiteral
"stat*"[0-9\']* -> BlockStm*
"stat"[0-9\']* -> BlockStm
"exp"[0-9\']* -> Expr
"bs"[0-9\']* -> Bindings
"t"[0-9\']* -> Terminated
"ds"[0-9\']* -> DataSort
"oc"[0-9\']* -> Outcome+
"A"[0-9\']* -> Action
"Ap"[0-9\']* -> ActionPrefix
"Ac"[0-9\']* -> ActionConst
"Ai"[0-9\']* -> ActionInfix
"C"[0-9\']* -> {Action "or"}+
"d"[0-9\']* -> Data
"dc"[0-9\']* -> DataConst
"d+"[0-9\']* -> {Data ","}+
"o"[0-9\']* -> DataOp
"op"[0-9\']* -> DataOpPrefix
"oi"[0-9\']* -> DataOpInfix
"q"[0-9\']* -> DataPred
"u"[0-9\']* -> Datum
"n"[0-9\']* -> Int
"tk"[0-9\']* -> Token
"nat"[0-9\']* -> Nat
"pos"[0-9\']* -> Pos
"nat-con"[0-9\']* -> Nat-Con
"b"[0-9\']* -> DataConst
"c"[0-9\']* -> Cell
"errors"[0-9\']* -> Errors
"char+"[0-9\']* -> CHAR+
"char*"[0-9\']* -> CHAR*
"b"[0-9\']* -> Bool
"decl*"[0-9\']* -> ClassBodyDecl*
"decl"[0-9\']* -> ClassBodyDecl
"env"[0-9\']* -> Environment
"mod"[0-9\']* -> ClassMod