module c/StructsAndUnions
exports
  context-free syntax
    StructSpecifier -> ElaboratedTypeName {cons("StructSpecifier")}
    UnionSpecifier -> ElaboratedTypeName {cons("UnionSpecifier")}
    EnumSpecifier -> ElaboratedTypeName {cons("EnumSpecifier")}

  context-free syntax
    "struct" IdentifierOrTypedefName? "{" MemberDeclaration+ "}" -> StructSpecifier {cons("Struct")}
    "struct" IdentifierOrTypedefName -> StructSpecifier {cons("StructId")}

  context-free syntax
    "union" IdentifierOrTypedefName? "{" MemberDeclaration+ "}" -> UnionSpecifier {cons("Union")}
    "union" IdentifierOrTypedefName -> UnionSpecifier {cons("UnionId")}

  context-free syntax
    TypeSpecifier {MemberDeclarator ","}+ ";" -> MemberDeclaration {cons("MemDecl")}
    TypeQualifier+ {MemberIdentifierDeclarator ","}+ ";" -> MemberDeclaration {cons("MemDecl1")}

  context-free syntax
    Declarator -> MemberDeclarator {cons("Declarator")}
    Declarator? ":" ConstantExpression -> MemberDeclarator {cons("BitFieldSize")}

