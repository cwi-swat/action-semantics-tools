definition

module obs/data/__AN-K-Data-Contract

imports obs/data/__AN-K-DataTypes 

exports

context-free syntax

	Datum -> Data {cons("datum")}

	DataConst  -> Data {cons("dataconst")}

	DataOpSort -> DataOpPrefix {cons("dataopsort")}

	"the" sort:DataSort -> DataOpSort 

	result DataOp Data  -> Data 
	holds DataPred Data -> DataConst 
	storable(Data) -> Bool
	bindable(Data) -> Bool
	sendable(Data) -> Bool

	prefix:DataOpPrefix "_"              -> DataOp {cons("dataopprefix")}
	"_" infix:DataOpInfix "_"           -> DataOp {cons("dataopinfix")}

	prefix:DataPredPrefix "_"   -> DataPred {cons("datapredprefix")}
	"_" infix:DataPredInfix "_"  -> DataPred {cons("datapredinfix")}


lexical syntax
   "true" -> DataConst 
   "false" -> DataConst 


context-free syntax

	"(" head:Data "," tail:{Data ","}+ ")" -> Data {cons("tuple")}
	"(" data:Data ")" -> Data {bracket, prefer,cons("bracket")}
	"(" ")" -> Data {prefer,cons("empty")}

context-free syntax
	nothing -> Data {cons("nothing")}

	Data "++" Data -> Data {prefer, left}

hiddens 

sorts
        DataPredInfix DataPredPrefix DataOpSort
        DataOpComponent Data DataOpPrefix 

context-free syntax

Data "!" Int -> Datum

variables
"o"[0-9\']* -> DataOp
"d"[0-9\']* -> Data
"ds"[0-9\']* -> DataSort
"d+"[0-9\']* -> {Data ","}+
"d*"[0-9\']* -> {Data ","}*
"n"[0-9\']* -> Int 
"p"[0-9\']* -> Nat-Con 
"u"[0-9\']* -> Datum
"i"[0-9\']* -> Int
"char+" -> CHAR+


module obs/data/booleans/Bool

imports obs/layout/Layout

exports
  sorts Bool BoolConst
  context-free syntax

  "true"        -> BoolConst {cons("true")}
  "false"       -> BoolConst {cons("false")}
  BoolConst     -> Bool {cons("bool")}

  "not" arg:Bool    -> Bool {prefer, cons("not")}

  lhs:Bool "|" rhs:Bool -> Bool {left, cons("or")}
  lhs:Bool "&" rhs:Bool -> Bool {left, cons("and")}
  "(" Bool ")"       -> Bool {bracket, cons("bracket-bool")}

context-free priorities
  Bool "&" Bool -> Bool >
  Bool "|" Bool -> Bool

hiddens
  variables
    "b"[0-9]* -> Bool


module obs/data/__AN-K-DataTypes

imports obs/layout/Layout

exports

context-free syntax
  SortName                              -> DataSort {cons("sortname")}
  DataSort "*"                          -> DataSort {cons("star")}
  DataSort "+"                          -> DataSort {cons("plus")}
  DataSort "?"                          -> DataSort {cons("opt")}
  "(" DataSort "," {DataSort ","}+ ")"               -> DataSort {cons("tuple")}
%%  "(" {DataSort "|"}+ ")"               -> DataSort {cons("alt")}

  DataSort "|" DataSort -> DataSort {assoc}
  "(" DataSort ")" -> DataSort {bracket,avoid}
  "("")" -> DataSort

  "action" "[" outcome:Outcome+ "]"             -> DataSort {cons("outcome")}


context-free syntax
  "taking"  DataSort    -> Outcome {cons("taking")}
  "giving"  DataSort    -> Outcome {cons("giving")}
  "raising" DataSort    -> Outcome {cons("raising")}
  "failing"             -> Outcome {cons("failing")}

context-free priorities
{  DataSort "*"                          -> DataSort {cons("star")}
  DataSort "+"                          -> DataSort {cons("plus")}
  DataSort "?"                          -> DataSort {cons("opt")}
}
>
  DataSort "|" DataSort -> DataSort {assoc}


lexical syntax

  "data"                        -> SortName 
  "datum"                       -> SortName 

lexical syntax
  "\"" ~[\"\ \n\t]+ "\""        -> Module

hiddens
sorts

        Module SortName
        DataOp DataPred OutCome DataSort  



module obs/layout/Layout

exports lexical syntax
  %% added by TVDS
  "~~" ~[\n]* [\n] -> LAYOUT
  "%%" ~[\n]* [\n] -> LAYOUT

  [\ \t\n]      -> LAYOUT

context-free restrictions

  LAYOUT? -/- [\ \t\n]





module obs/data/booleans/__AN-K-Bool

imports obs/data/booleans/Bool 
	obs/data/__AN-K-Data-Contract

exports


lexical syntax
  "bool"        -> SortName 
  "not"         -> DataOpPrefix 

context-free syntax
   BoolConst -> Datum {avoid, cons("datum")}

hiddens sorts

        BoolConst Bool DataOpPrefix DataConst SortName


