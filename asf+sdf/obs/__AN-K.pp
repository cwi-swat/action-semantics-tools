[
   Datum-Data -- _1,
   Data-Tuple -- Hhs=0["(" _1 H["," _2] ")"],
   Data-Tuple.2:iter-sep -- Hhs=0[_1 ","],
   bracket-Data -- Hhs=0["(" _1 ")"],
   Empty-Data-Tuple -- Hhs=0["(" ")"],
   DataConst-Data -- _1,
   DataOpPrefix-Data -- H[_1 _2],
   DataOpComponent-Data -- H[_1 _2],
   DataOpSort-Data -- H[_1 _2],
   DataOpInfix-Data -- Hhs=0[_1 _2 _3],
   DataOpComponent-DataOpPrefix -- _1,
   DataOpSort-DataOpPrefix -- _1,
   DataOpComponent -- Hhs=0["#" _1],
   Undefined-DataOpComponent -- Hhs=0["#" "-1"],
   DataOpSort -- H["the" _1],
   equals-DataPredInfix -- "=",
   def-DataPredInfix -- "def",
   SortName-DataSort -- _1,
   DataSort-star-DataSort -- Hhs=0[_1 "*"],
   DataSort-plus-DataSort -- Hhs=0[_1 "+"],
   DataSort-opt-DataSort -- Hhs=0[ _1 "?"],
   DataSort-tuple-DataSort -- Hhs=0["(" H[_1] ")"],
   DataSort-tuple-DataSort.1:iter-star-sep -- Hhs=0[_1 ","],
   DataSort-alt-DataSort -- H["(" H[_1] ")"],
   DataSort-alt-DataSort.1:iter-sep -- H[_1 "|"],
   action-DataSort -- Hhs=0["action" "[" H[ _1] "]"],
   action-DataSort.1:iter -- _1,
   taking-Outcome -- H["taking" _1],
   giving-Outcome -- H["giving" _1],
   raising-Outcome -- H["raising" _1],
   failing-Outcome -- "failing",
   DataOpPrefix-DataOp -- Hhs=0[_1 "_"],
   DataOpInfix-DataOp -- Hhs=0["_" _1 "_"],
   DataPredPrefix-DataPred -- Hhs=0[_1 "_"],
   DataPredInfix-DataPred -- Hhs=0["_" _1 "_"],
   data-SortName -- "data",
   datum-SortName -- "datum",
   gt-DataPredInfix -- ">",
   lt-DataPredInfix -- "<",
   ge-DataPredInfix -- ">=",
   le-DataPredInfix -- "<=",
   nat-SortName -- "nat",
   pos-SortName -- "pos",
   int-SortName -- "int",
   plus-DataOpInfix -- "+",
   monus-DataOpInfix -- "-?",
   times-DataOpInfix -- "*",
   minus-DataOpInfix -- "-",
   Int-Datum -- NUM[_1],
   bool-SortName -- "bool",
   not-DataOpPrefix -- "not",
   true-DataConst -- "true",
   false-DataConst -- "false",
   BoolConst-Datum -- _1,
   tupleToList-DataopPrefix -- "tupleToList",
   list-SortName -- "list",
   List-Datum -- _1,
   token-SortName -- "token",
   string-SortName -- "string",
   Token -- _1,
   Token-Datum -- VAR[_1],
   normal-Terminated -- H["normal" _1],
   exceptional-Terminated -- H["exceptional" _1],
   failed-Terminated -- "failed",
   provide-Action -- H[KW["provide"] _1],
   give-Action -- H[KW["give"] _1],
   check-Action -- H[KW["check"] _1],
   select-Action -- Vis=1 [H[KW["select"] "("] _1] ")",
   select-Action.1:iter-sep -- _1 KW["or"],
   copy-ActionConst -- KW["copy"],
   then-ActionInfix -- KW["then"],
   and-then-ActionInfix -- H[KW["and"] KW["then"]],
   and-ActionInfix -- KW["and"],
   indivisibly-ActionPrefix -- KW["indivisibly"],
   raise-ActionConst -- KW["raise"],
   exceptionally-ActionInfix -- KW["exceptionally"],
   then-exceptionally-ActionInfix -- H [ KW["then"] KW["exceptionally"]],
   fail-ActionConst -- KW["fail"],
   otherwise-ActionInfix -- KW["otherwise"],
   choose-natural-ActionConst -- H[KW["choose"] KW["natural"]],
   and-exceptionally-ActionInfix -- H[KW["and"] KW["exceptionally"]],
   bindable-SortName -- "bindable",
   bindings-SortName -- "bindings",
   give-current-bindings-ActionConst -- H[KW["give"] KW["current"] KW["bindings"]],
   hence-ActionInfix -- KW["hence"],
   no-bindings-DataConst -- H["no" "bindings"],
   binding-DataOpPrefix -- "binding",
   overriding-DataOpPrefix -- "overriding",
   disjoint-union-DataOpPrefix -- H["disjoint" "union"],
   bound-DataOpPrefix -- "bound",
   cell-SortName -- "cell",
   storable-SortName -- "storable",
   create-ActionConst -- KW["create"],
   destroy-ActionConst -- KW["destroy"],
   update-ActionConst -- KW["update"],
   inspect-ActionConst -- KW["inspect"],
   action-SortName -- "action",
   provide-DataOpPrefix -- "provide",
   enact-ActionConst -- KW["enact"],
   Action-Datum -- V[_1],
   ActionPrefix-DataOpPrefix -- _1,
   ActionInfix-DataOpInfix -- _1,
   agent-SortName -- "agent",
   message-SortName -- "message",
   message-tag-SortName -- "message-tag",
   activate-ActionConst -- KW["activate"],
   deactivate-ActionConst -- KW["deactivate"],
   give-current-agent-ActionConst -- H[KW["give"] KW["current"] KW["agent"]],
   send-ActionConst -- KW["send"],
   receive-ActionConst -- KW["receive"],
   give-current-time-ActionConst -- H[KW["give"] KW["current"] KW["time"]],
   Terminated-Action -- _1,
   bracket-Action -- Hhs=0["(" _1 ")"],
   ActionConst-Action -- _1,
   ActionPrefix-Action -- V is=1 [_1 _2],
   ActionInfix-Action -- V is=1 [H[_1 _2] _3]
]
