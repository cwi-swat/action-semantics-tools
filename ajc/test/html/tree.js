foldersTree = gFld("<b>Root</b>", "", "")
     insDoc(foldersTree, gLnk("Main Page", "", "main.html"))
aux1 = insFld(foldersTree, gFld("File List", "", "files.html"))
       insDoc(aux1, gLnk("AbstractAction.java", "", "AbstractAction_8java.html"))
       insDoc(aux1, gLnk("AbstractEnactable.java", "", "AbstractEnactable_8java.html"))
       insDoc(aux1, gLnk("AbstractInfixCombinator.java", "", "AbstractInfixCombinator_8java.html"))
       insDoc(aux1, gLnk("AbstractPrefixCombinator.java", "", "AbstractPrefixCombinator_8java.html"))
       insDoc(aux1, gLnk("Action.java", "", "Action_8java.html"))
       insDoc(aux1, gLnk("ActionImpl.java", "", "ActionImpl_8java.html"))
       insDoc(aux1, gLnk("Agent.java", "", "Agent_8java.html"))
       insDoc(aux1, gLnk("AgentImpl.java", "", "AgentImpl_8java.html"))
       insDoc(aux1, gLnk("Bindable.java", "", "Bindable_8java.html"))
       insDoc(aux1, gLnk("Bindings.java", "", "Bindings_8java.html"))
       insDoc(aux1, gLnk("BindingsImpl.java", "", "BindingsImpl_8java.html"))
       insDoc(aux1, gLnk("Bool.java", "", "Bool_8java.html"))
       insDoc(aux1, gLnk("BoolImpl.java", "", "BoolImpl_8java.html"))
       insDoc(aux1, gLnk("Cell.java", "", "Cell_8java.html"))
       insDoc(aux1, gLnk("CellImpl.java", "", "CellImpl_8java.html"))
       insDoc(aux1, gLnk("Data.java", "", "Data_8java.html"))
       insDoc(aux1, gLnk("DataConst.java", "", "DataConst_8java.html"))
       insDoc(aux1, gLnk("DataConstImpl.java", "", "DataConstImpl_8java.html"))
       insDoc(aux1, gLnk("DataFactory.java", "", "DataFactory_8java.html"))
       insDoc(aux1, gLnk("DataImpl.java", "", "DataImpl_8java.html"))
       insDoc(aux1, gLnk("DataValue.java", "", "DataValue_8java.html"))
       insDoc(aux1, gLnk("DataValueImpl.java", "", "DataValueImpl_8java.html"))
       insDoc(aux1, gLnk("Datum.java", "", "Datum_8java.html"))
       insDoc(aux1, gLnk("DatumImpl.java", "", "DatumImpl_8java.html"))
       insDoc(aux1, gLnk("Empty.java", "", "Empty_8java.html"))
       insDoc(aux1, gLnk("EmptyImpl.java", "", "EmptyImpl_8java.html"))
       insDoc(aux1, gLnk("Enactable.java", "", "Enactable_8java.html"))
       insDoc(aux1, gLnk("Exceptional.java", "", "Exceptional_8java.html"))
       insDoc(aux1, gLnk("Failed.java", "", "Failed_8java.html"))
       insDoc(aux1, gLnk("Int.java", "", "Int_8java.html"))
       insDoc(aux1, gLnk("IntImpl.java", "", "IntImpl_8java.html"))
       insDoc(aux1, gLnk("List.java", "", "List_8java.html"))
       insDoc(aux1, gLnk("ListImpl.java", "", "ListImpl_8java.html"))
       insDoc(aux1, gLnk("Message.java", "", "Message_8java.html"))
       insDoc(aux1, gLnk("MessageTag.java", "", "MessageTag_8java.html"))
       insDoc(aux1, gLnk("MessageTagImpl.java", "", "MessageTagImpl_8java.html"))
       insDoc(aux1, gLnk("PureFactory.java", "", "PureFactory_8java.html"))
       insDoc(aux1, gLnk("Schedule.java", "", "Schedule_8java.html"))
       insDoc(aux1, gLnk("Scheduling.java", "", "Scheduling_8java.html"))
       insDoc(aux1, gLnk("Storable.java", "", "Storable_8java.html"))
       insDoc(aux1, gLnk("Store.java", "", "Store_8java.html"))
       insDoc(aux1, gLnk("Storing.java", "", "Storing_8java.html"))
       insDoc(aux1, gLnk("TaggedBuffers.java", "", "TaggedBuffers_8java.html"))
       insDoc(aux1, gLnk("Text.java", "", "Text_8java.html"))
       insDoc(aux1, gLnk("TextImpl.java", "", "TextImpl_8java.html"))
       insDoc(aux1, gLnk("Token.java", "", "Token_8java.html"))
       insDoc(aux1, gLnk("TokenImpl.java", "", "TokenImpl_8java.html"))
       insDoc(aux1, gLnk("Tuple.java", "", "Tuple_8java.html"))
aux1 = insFld(foldersTree, gFld("Compound List", "", "annotated.html"))
       insDoc(aux1, gLnk("And::_And", "", "classAnd_1_1__And.html"))
       insDoc(aux1, gLnk("AndExceptionally::_AndExceptionally", "", "classAndExceptionally_1_1__AndExceptionally.html"))
       insDoc(aux1, gLnk("AndThen::_AndThen", "", "classAndThen_1_1__AndThen.html"))
       insDoc(aux1, gLnk("Exceptionally::_Exceptionally", "", "classExceptionally_1_1__Exceptionally.html"))
       insDoc(aux1, gLnk("Hence::_Hence", "", "classHence_1_1__Hence.html"))
       insDoc(aux1, gLnk("Indivisibly::_Indivisibly", "", "classIndivisibly_1_1__Indivisibly.html"))
       insDoc(aux1, gLnk("Otherwise::_Otherwise", "", "classOtherwise_1_1__Otherwise.html"))
       insDoc(aux1, gLnk("Provide::_Provide", "", "classProvide_1_1__Provide.html"))
       insDoc(aux1, gLnk("Then::_Then", "", "classThen_1_1__Then.html"))
       insDoc(aux1, gLnk("AbstractEnactable", "", "classAbstractEnactable.html"))
       insDoc(aux1, gLnk("AbstractInfixCombinator", "", "classAbstractInfixCombinator.html"))
       insDoc(aux1, gLnk("AbstractPrefixCombinator", "", "classAbstractPrefixCombinator.html"))
       insDoc(aux1, gLnk("Action", "", "interfaceAction.html"))
       insDoc(aux1, gLnk("ActionImpl", "", "classActionImpl.html"))
       insDoc(aux1, gLnk("Agent", "", "interfaceAgent.html"))
       insDoc(aux1, gLnk("AgentImpl", "", "classAgentImpl.html"))
       insDoc(aux1, gLnk("And", "", "classAnd.html"))
       insDoc(aux1, gLnk("AndExceptionally", "", "classAndExceptionally.html"))
       insDoc(aux1, gLnk("AndThen", "", "classAndThen.html"))
       insDoc(aux1, gLnk("Bindable", "", "interfaceBindable.html"))
       insDoc(aux1, gLnk("Bindings", "", "interfaceBindings.html"))
       insDoc(aux1, gLnk("BindingsImpl", "", "classBindingsImpl.html"))
       insDoc(aux1, gLnk("Bool", "", "interfaceBool.html"))
       insDoc(aux1, gLnk("BoolImpl", "", "classBoolImpl.html"))
       insDoc(aux1, gLnk("Cell", "", "interfaceCell.html"))
       insDoc(aux1, gLnk("CellImpl", "", "classCellImpl.html"))
       insDoc(aux1, gLnk("Comparable", "", "classComparable.html"))
       insDoc(aux1, gLnk("Data", "", "interfaceData.html"))
       insDoc(aux1, gLnk("DataConst", "", "interfaceDataConst.html"))
       insDoc(aux1, gLnk("DataConstImpl", "", "classDataConstImpl.html"))
       insDoc(aux1, gLnk("DataFactory", "", "interfaceDataFactory.html"))
       insDoc(aux1, gLnk("DataImpl", "", "classDataImpl.html"))
       insDoc(aux1, gLnk("DataValue", "", "interfaceDataValue.html"))
       insDoc(aux1, gLnk("DataValueImpl", "", "classDataValueImpl.html"))
       insDoc(aux1, gLnk("Datum", "", "interfaceDatum.html"))
       insDoc(aux1, gLnk("DatumImpl", "", "classDatumImpl.html"))
       insDoc(aux1, gLnk("Empty", "", "interfaceEmpty.html"))
       insDoc(aux1, gLnk("EmptyImpl", "", "classEmptyImpl.html"))
       insDoc(aux1, gLnk("Enactable", "", "interfaceEnactable.html"))
       insDoc(aux1, gLnk("Exception", "", "classException.html"))
       insDoc(aux1, gLnk("Exceptional", "", "classExceptional.html"))
       insDoc(aux1, gLnk("Exceptionally", "", "classExceptionally.html"))
       insDoc(aux1, gLnk("Failed", "", "classFailed.html"))
       insDoc(aux1, gLnk("Hashtable", "", "classHashtable.html"))
       insDoc(aux1, gLnk("Hence", "", "classHence.html"))
       insDoc(aux1, gLnk("Indivisibly", "", "classIndivisibly.html"))
       insDoc(aux1, gLnk("Int", "", "interfaceInt.html"))
       insDoc(aux1, gLnk("IntImpl", "", "classIntImpl.html"))
       insDoc(aux1, gLnk("List", "", "interfaceList.html"))
       insDoc(aux1, gLnk("ListImpl", "", "classListImpl.html"))
       insDoc(aux1, gLnk("Message", "", "interfaceMessage.html"))
       insDoc(aux1, gLnk("MessageTag", "", "interfaceMessageTag.html"))
       insDoc(aux1, gLnk("MessageTagImpl", "", "classMessageTagImpl.html"))
       insDoc(aux1, gLnk("Otherwise", "", "classOtherwise.html"))
       insDoc(aux1, gLnk("Provide", "", "classProvide.html"))
       insDoc(aux1, gLnk("PureFactory", "", "classPureFactory.html"))
       insDoc(aux1, gLnk("Runnable", "", "classRunnable.html"))
       insDoc(aux1, gLnk("Schedule", "", "classSchedule.html"))
       insDoc(aux1, gLnk("Scheduling", "", "interfaceScheduling.html"))
       insDoc(aux1, gLnk("Storable", "", "interfaceStorable.html"))
       insDoc(aux1, gLnk("Store", "", "classStore.html"))
       insDoc(aux1, gLnk("Storing", "", "interfaceStoring.html"))
       insDoc(aux1, gLnk("TaggedBuffers", "", "classTaggedBuffers.html"))
       insDoc(aux1, gLnk("Text", "", "interfaceText.html"))
       insDoc(aux1, gLnk("TextImpl", "", "classTextImpl.html"))
       insDoc(aux1, gLnk("Then", "", "classThen.html"))
       insDoc(aux1, gLnk("Token", "", "interfaceToken.html"))
       insDoc(aux1, gLnk("TokenImpl", "", "classTokenImpl.html"))
aux1 = insFld(foldersTree, gFld("Class Hierarchy", "", "hierarchy.html"))
  aux2 = insFld(aux1, gFld("Bindable", "", "interfaceBindable.html"))
    aux3 = insFld(aux2, gFld("Agent", "", "interfaceAgent.html"))
           insDoc(aux3, gLnk("AgentImpl", "", "classAgentImpl.html"))
    aux3 = insFld(aux2, gFld("Cell", "", "interfaceCell.html"))
           insDoc(aux3, gLnk("CellImpl", "", "classCellImpl.html"))
    aux3 = insFld(aux2, gFld("Datum", "", "interfaceDatum.html"))
      aux4 = insFld(aux3, gFld("Action", "", "interfaceAction.html"))
        aux5 = insFld(aux4, gFld("ActionImpl", "", "classActionImpl.html"))
          aux6 = insFld(aux5, gFld("AbstractInfixCombinator", "", "classAbstractInfixCombinator.html"))
                 insDoc(aux6, gLnk("And", "", "classAnd.html"))
                 insDoc(aux6, gLnk("AndExceptionally", "", "classAndExceptionally.html"))
                 insDoc(aux6, gLnk("AndThen", "", "classAndThen.html"))
                 insDoc(aux6, gLnk("Exceptionally", "", "classExceptionally.html"))
                 insDoc(aux6, gLnk("Hence", "", "classHence.html"))
                 insDoc(aux6, gLnk("Otherwise", "", "classOtherwise.html"))
                 insDoc(aux6, gLnk("Then", "", "classThen.html"))
          aux6 = insFld(aux5, gFld("AbstractPrefixCombinator", "", "classAbstractPrefixCombinator.html"))
                 insDoc(aux6, gLnk("Indivisibly", "", "classIndivisibly.html"))
               insDoc(aux5, gLnk("Provide", "", "classProvide.html"))
           insDoc(aux3, gLnk("Agent", "", "interfaceAgent.html"))
      aux4 = insFld(aux3, gFld("Bindings", "", "interfaceBindings.html"))
             insDoc(aux4, gLnk("BindingsImpl", "", "classBindingsImpl.html"))
      aux4 = insFld(aux3, gFld("Bool", "", "interfaceBool.html"))
             insDoc(aux4, gLnk("BoolImpl", "", "classBoolImpl.html"))
           insDoc(aux3, gLnk("Cell", "", "interfaceCell.html"))
      aux4 = insFld(aux3, gFld("DatumImpl", "", "classDatumImpl.html"))
             insDoc(aux4, gLnk("ActionImpl", "", "classActionImpl.html"))
             insDoc(aux4, gLnk("AgentImpl", "", "classAgentImpl.html"))
             insDoc(aux4, gLnk("BindingsImpl", "", "classBindingsImpl.html"))
             insDoc(aux4, gLnk("BoolImpl", "", "classBoolImpl.html"))
             insDoc(aux4, gLnk("CellImpl", "", "classCellImpl.html"))
             insDoc(aux4, gLnk("IntImpl", "", "classIntImpl.html"))
             insDoc(aux4, gLnk("ListImpl", "", "classListImpl.html"))
        aux5 = insFld(aux4, gFld("TextImpl", "", "classTextImpl.html"))
               insDoc(aux5, gLnk("MessageTagImpl", "", "classMessageTagImpl.html"))
               insDoc(aux5, gLnk("TokenImpl", "", "classTokenImpl.html"))
      aux4 = insFld(aux3, gFld("Int", "", "interfaceInt.html"))
             insDoc(aux4, gLnk("IntImpl", "", "classIntImpl.html"))
      aux4 = insFld(aux3, gFld("List", "", "interfaceList.html"))
             insDoc(aux4, gLnk("ListImpl", "", "classListImpl.html"))
      aux4 = insFld(aux3, gFld("Text", "", "interfaceText.html"))
        aux5 = insFld(aux4, gFld("MessageTag", "", "interfaceMessageTag.html"))
               insDoc(aux5, gLnk("MessageTagImpl", "", "classMessageTagImpl.html"))
             insDoc(aux4, gLnk("TextImpl", "", "classTextImpl.html"))
        aux5 = insFld(aux4, gFld("Token", "", "interfaceToken.html"))
               insDoc(aux5, gLnk("TokenImpl", "", "classTokenImpl.html"))
         insDoc(aux2, gLnk("Int", "", "interfaceInt.html"))
  aux2 = insFld(aux1, gFld("Comparable", "", "classComparable.html"))
         insDoc(aux2, gLnk("Token", "", "interfaceToken.html"))
  aux2 = insFld(aux1, gFld("Data", "", "interfaceData.html"))
    aux3 = insFld(aux2, gFld("DataImpl", "", "classDataImpl.html"))
      aux4 = insFld(aux3, gFld("DataValueImpl", "", "classDataValueImpl.html"))
        aux5 = insFld(aux4, gFld("DataConstImpl", "", "classDataConstImpl.html"))
               insDoc(aux5, gLnk("EmptyImpl", "", "classEmptyImpl.html"))
             insDoc(aux4, gLnk("DatumImpl", "", "classDatumImpl.html"))
    aux3 = insFld(aux2, gFld("DataValue", "", "interfaceDataValue.html"))
      aux4 = insFld(aux3, gFld("DataConst", "", "interfaceDataConst.html"))
             insDoc(aux4, gLnk("DataConstImpl", "", "classDataConstImpl.html"))
        aux5 = insFld(aux4, gFld("Empty", "", "interfaceEmpty.html"))
               insDoc(aux5, gLnk("EmptyImpl", "", "classEmptyImpl.html"))
           insDoc(aux3, gLnk("DataValueImpl", "", "classDataValueImpl.html"))
           insDoc(aux3, gLnk("Datum", "", "interfaceDatum.html"))
  aux2 = insFld(aux1, gFld("DataFactory", "", "interfaceDataFactory.html"))
         insDoc(aux2, gLnk("PureFactory", "", "classPureFactory.html"))
  aux2 = insFld(aux1, gFld("Enactable", "", "interfaceEnactable.html"))
         insDoc(aux2, gLnk("AbstractEnactable", "", "classAbstractEnactable.html"))
         insDoc(aux2, gLnk("And::_And", "", "classAnd_1_1__And.html"))
         insDoc(aux2, gLnk("AndExceptionally::_AndExceptionally", "", "classAndExceptionally_1_1__AndExceptionally.html"))
         insDoc(aux2, gLnk("AndThen::_AndThen", "", "classAndThen_1_1__AndThen.html"))
         insDoc(aux2, gLnk("Exceptionally::_Exceptionally", "", "classExceptionally_1_1__Exceptionally.html"))
         insDoc(aux2, gLnk("Hence::_Hence", "", "classHence_1_1__Hence.html"))
         insDoc(aux2, gLnk("Indivisibly::_Indivisibly", "", "classIndivisibly_1_1__Indivisibly.html"))
         insDoc(aux2, gLnk("Otherwise::_Otherwise", "", "classOtherwise_1_1__Otherwise.html"))
         insDoc(aux2, gLnk("Provide::_Provide", "", "classProvide_1_1__Provide.html"))
         insDoc(aux2, gLnk("Then::_Then", "", "classThen_1_1__Then.html"))
  aux2 = insFld(aux1, gFld("Exception", "", "classException.html"))
         insDoc(aux2, gLnk("Exceptional", "", "classExceptional.html"))
         insDoc(aux2, gLnk("Failed", "", "classFailed.html"))
  aux2 = insFld(aux1, gFld("Hashtable", "", "classHashtable.html"))
         insDoc(aux2, gLnk("TaggedBuffers", "", "classTaggedBuffers.html"))
  aux2 = insFld(aux1, gFld("Message", "", "interfaceMessage.html"))
         insDoc(aux2, gLnk("Agent", "", "interfaceAgent.html"))
         insDoc(aux2, gLnk("Cell", "", "interfaceCell.html"))
         insDoc(aux2, gLnk("Datum", "", "interfaceDatum.html"))
         insDoc(aux2, gLnk("Int", "", "interfaceInt.html"))
  aux2 = insFld(aux1, gFld("Runnable", "", "classRunnable.html"))
         insDoc(aux2, gLnk("Action", "", "interfaceAction.html"))
  aux2 = insFld(aux1, gFld("Scheduling", "", "interfaceScheduling.html"))
         insDoc(aux2, gLnk("Schedule", "", "classSchedule.html"))
  aux2 = insFld(aux1, gFld("Storable", "", "interfaceStorable.html"))
         insDoc(aux2, gLnk("Agent", "", "interfaceAgent.html"))
         insDoc(aux2, gLnk("Cell", "", "interfaceCell.html"))
         insDoc(aux2, gLnk("Datum", "", "interfaceDatum.html"))
         insDoc(aux2, gLnk("Int", "", "interfaceInt.html"))
  aux2 = insFld(aux1, gFld("Storing", "", "interfaceStoring.html"))
         insDoc(aux2, gLnk("Store", "", "classStore.html"))
     insDoc(foldersTree, gLnk("Compound Members", "", "functions.html"))
aux1 = insFld(foldersTree, gFld("Package List", "", "packages.html"))
       insDoc(aux1, gLnk("ajc", "", "package__ajc.html"))
       insDoc(aux1, gLnk("ajc.data", "", "package__ajc_8data.html"))
       insDoc(aux1, gLnk("ajc.data.pure", "", "package__ajc_8data_8pure.html"))
     insDoc(foldersTree, gLnk("Graphical Class Hierarchy", "", "inherits.html"))
